[{"content":"🤖 Assistant 要将 Manjaro 迁移到 Arch Linux，需要备份数据、安装 Arch 并恢复配置。以下是详细步骤：\n📌 迁移流程概览 备份重要数据（避免丢失） 准备 Arch 安装介质（USB 或网络安装） 安装 Arch Linux（手动或脚本辅助） 恢复配置文件和数据 优化系统设置 🔹 第一步：备份 Manjaro 数据 1. 备份个人文件（最关键的！） 重要目录： 1 cp -r ~/Documents ~/Pictures ~/Music ~/Videos /mnt/backup/ 或者使用 rsync（增量备份）： 1 rsync -avz --progress ~/ /mnt/backup/home/ 备份到外部硬盘或 NAS（推荐 ext4/NTFS 格式）。 2. 备份软件列表 导出已安装的软件包（方便 Arch 重新安装）： 1 2 pacman -Qqe \u0026gt; pkglist.txt # 所有显式安装的软件 pacman -Qq \u0026gt; pkglist-full.txt # 所有软件（包括依赖） 备份 AUR 软件（如 yay 安装的）： 1 yay -Qqe \u0026gt; aur-pkglist.txt 3. 备份系统配置 关键配置文件（复制到备份目录）： 1 2 3 mkdir ~/backup-config cp -r /etc/{pacman.conf,hosts,fstab,default/grub} ~/backup-config/ cp -r ~/.config/{i3,bspwm,alacritty,fish} ~/backup-config/ 浏览器数据（如 Firefox/Chrome）： 1 cp -r ~/.mozilla ~/.config/google-chrome ~/backup-config/ 4. 备份 GRUB 和 EFI（可选） 如果是 UEFI 系统，备份 EFI 分区： 1 2 sudo mount /dev/nvme0n1p1 /mnt/efi # 替换为你的 EFI 分区 cp -r /mnt/efi/EFI/manjaro /mnt/backup/EFI/ 🔹 第二步：安装 Arch Linux 1. 准备 Arch 安装介质 下载 Arch ISO： 1 wget https://archlinux.org/iso/latest/archlinux-x86_64.iso 写入 USB（替换 /dev/sdX）： 1 sudo dd bs=4M if=archlinux-x86_64.iso of=/dev/sdX status=progress oflag=sync 2. 启动 Arch 安装环境 从 USB 启动，进入 Live 环境。 联网： 1 2 3 iwctl station wlan0 connect SSID # WiFi dhcpcd # 有线网络 ping archlinux.org # 检查网络 3. 分区和格式化 查看磁盘： 1 lsblk 推荐分区方案：\n挂载点 分区类型 大小 文件系统 /boot/efi EFI 512MB fat32 / Linux ≥30GB ext4 /home Linux 剩余空间 ext4 swap swap ≥4GB swap 格式化（示例）：\n1 2 3 4 5 mkfs.fat -F32 /dev/nvme0n1p1 # EFI mkfs.ext4 /dev/nvme0n1p2 # / mkfs.ext4 /dev/nvme0n1p3 # /home mkswap /dev/nvme0n1p4 # swap swapon /dev/nvme0n1p4 4. 安装 Arch 挂载分区： 1 2 3 4 mount /dev/nvme0n1p2 /mnt mkdir /mnt/{boot,home} mount /dev/nvme0n1p1 /mnt/boot mount /dev/nvme0n1p3 /mnt/home 安装基础系统： 1 pacstrap /mnt base linux linux-firmware networkmanager nano 生成 fstab： 1 genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab 5. 进入新系统 \u0026amp; 完成安装 Chroot： 1 arch-chroot /mnt 设置时区、语言、主机名等： 1 2 3 4 5 6 ln -sf /usr/share/zoneinfo/Region/City /etc/localtime hwclock --systohc echo \u0026#34;en_US.UTF-8 UTF-8\u0026#34; \u0026gt;\u0026gt; /etc/locale.gen locale-gen echo \u0026#34;LANG=en_US.UTF-8\u0026#34; \u0026gt; /etc/locale.conf echo \u0026#34;myhostname\u0026#34; \u0026gt; /etc/hostname 安装 GRUB（UEFI）： 1 2 3 pacman -S grub efibootmgr grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB grub-mkconfig -o /boot/grub/grub.cfg 设置 root 密码： 1 passwd 🔹 第三步：恢复数据 1. 恢复个人文件 挂载备份盘： 1 mount /dev/sdb1 /mnt/backup # 替换为你的备份设备 复制文件： 1 cp -r /mnt/backup/home/* ~/ 2. 重新安装软件 从备份列表安装： 1 2 pacman -S - \u0026lt; pkglist.txt yay -S - \u0026lt; aur-pkglist.txt 3. 恢复配置文件 复制回 /etc 和 ~/.config： 1 2 sudo cp -r ~/backup-config/etc/* /etc/ cp -r ~/backup-config/.config/* ~/.config/ 🔹 最后优化 检查引导： 1 sudo update-grub 启用 NetworkManager： 1 systemctl enable NetworkManager 安装桌面环境（可选）： 1 pacman -S xorg gnome # 或 kde, i3, sway, etc. 📢 注意事项 ⚠️ 数据安全第一！ 确保备份无误后再操作。 🔧 驱动问题：Arch 默认不包含专有驱动（如 NVIDIA），需手动安装： 1 pacman -S nvidia nvidia-utils 🔄 AUR 软件：可能需要重新编译（如 yay -S pkgname）。 🎉 完成！ 现在你拥有了一个原生的 Arch Linux，并恢复了 Manjaro 的配置和数据。🎯 如果遇到问题，可以参考：\nArch Wiki Arch 安装指南 希望顺利迁移！🚀\n","date":"0001-01-01T00:00:00Z","permalink":"https://blog.gtlx.ltd/p/","title":""},{"content":" 官方文档手册： 镜像包下载： 清华源 一. 安装前的其他设置（可以省略此步） 改字体：setfont /usr/share/kbd/consolefonts/ 改键盘布局：loadkeys de-latin1 以上的看情况可以省略，以下的校准时间不建议省略\n校准时间： timedatectl set-ntp true; 使用 timedatectl status 检查服务状态 其他一些小设置 输入：vim /etc/pacman.conf PS：可以使用vim或nano文件编辑器 启动32为应用支持： 删除 【multilib】 前的#号批注； 美化进度条（进度条会变成吃豆人）： 找到#color 的删除前面的#号批注 也可以在其下一行加入ILoveCandy 换源： vim /etc/pacman.d/mirrorlist 同步备份：pacman -Syy 一些国内的源： 清华源: Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch； ps： 如果遇到签名错误，可以安装sudo pacman -S archlinuxcn-keyring etc/pacman.d为pacman配置文件路径 可以找到路径，按esc退出修改，按：输入wq保存并且退出，并且将光标移到路径上，按gf进入添加源 后续也可以直接使用vim编辑文件服务器添加源： （更改源以后记得输入 pacman -Syy 同步备份） ip link\n二. 硬盘分区 lsblk （查看硬盘分区） 一般情况loop0，sr0是镜像文件不用管：sda是你的硬盘大小（一般情况是sda）\n1. 删除分区 ： 命令行输入：gdisk /dev/sda 先输入x，进入管理员模式 再输入z，删除分区数据 接着分别联系输入俩个Y,确认删除 PS：gdisk为删除指令 2. 设置分区表 parted /dev/sda 输入mktable 输入gpt 输入quit 3. 分区 验证引导模式： ls /sys/firmware/efi/efivars PS： 如果命令结果显示了目录且没有报告错误，则系统以UEFI 模式引导。 如果目录不存在，则系统可能以 BIOS 模式 (或 CSM 模式) 引导。如果系统未以您想要的模式引导启动，请参考您的主板说明书。 设置分区 cfdisk PS： cgdisk为图形化分区指令 选择gpt回车进入分区界面 (如果不需要选择，可以忽略此步) 移动光标到New删除原来的分区大小，输入直接想要的分区大小,回车确认 光标移动到Yypc确认分区类型 重复以上步骤完成分区，再将光标移动到write输入yes点击回车，保存；然后将光标移动到Quit退出\n**PS：**格式的选择\nBIOS分区将光标移动到BIOS boot上回车确认； 交换分区：Linux swap； 个人分区和根分区Linux filesystem 4. 格式化分区 PS：ext4系统分区格式；（BIOS不用格式化启动分区，UEF需要） 启动分区：mkfs.fat -F 32 /dev/(启动分区名) 交换分区：mkswap /dev/(交换分区名) 根，个人分区： mkfs -t ext4 /dev/(个人或系统分区名) PS：格式化分区结束，接下来可以输入lsblk查看硬盘分区还在不在。一般格式化完分区以后是没有任何变化的这个不用慌，正常情况。） 5. 挂载分区（不挂载会报错） 常用命令： 挂载命令：mount 卸载分区：umount 启动交换分区命令：swapon 新建文件夹命令：mkdir 删除文件夹命令：rm -rf 目录名字 挂载交换分区：swapon /dev/(交换分区名) 挂载根分区: mount /dev/(根分区) /mnt 挂载启动分区：(BIOS不需要挂载) 新建文件夹 mkdir /mnt/boot 挂载启动分区 mount /dev /(启动分区名)/mnt/boot 挂载个人分区： 新建文件夹 mkdir /mnt/home 挂载个人分区 mount /dev/(个人分区) /mnt/home 三. 配置Liunx（具体的可以见官方手册） 1.下载Linux内核 需要安装的软件包如下： base； Linux内核和linux框架固件：linux-firmware 英特尔（amd）显卡驱动：intel（amd）-ucode 开始安装：pacstrap /mnt base base-devel linux linux-firmware intel-ucode ps： pacstrap为安装包特有的安装工具； 如果报错请检查是否拼写错误，或者换一个国内的源 2. 生成 fstab 文件分区: 先生成 fstab 文件分区输入： genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab 再用cat命令查看生产的文件是否正确： cat /mnt/etc/fstab 3. 设置本地化 进入安装文件: arch-chroot /mnt 1.设置键盘布局(可选) 1.先输入vim /etc/vconsole.conf 2.再写入：KEYMAP=de-latin1（键盘布局） 2.设置时区： 输入： ln -sf /usr/share/zoneinfo/Asia(地区名)/Shanghai(城市名) /etc/localtime cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime 同步硬件时间：hwclock --systohc 3.设置语言： 输入 vim /etc/locale.gen；查找#en_US.UIF-8和#zh_CN.UTF-8回车；去掉#批注后保存退出 输入locale-gen确认文件是否正常 3.（新版可选也可以不应用，不用管） 用vim创建文件输入vim /etc/locale.conf； 再设定 LANG 变量写入LANG=en_US.UTF-8； 应用语言 export LANG=en_US.UTF-8 4.设置计算机名：(默认是archios) 用vim命令输入：vim /etc/hostname，再输入主机名 5.配置网络： vim /etc/hosts 输入以下配置：（当中按tab） 1 2 3 127.0.0.1 localhost ::1 localhost 127.0.1.1 archios.localdomain archios （主机名.本地域名 主机名） 四. 本地化和引导 1. 安装一些常用应用和必要文件 PS： 如果报错请检查是否拼写错误 arch下安装程序的指令pacman -S；pacman -Sy为同步;pacman -Syy更新软件 pacman -S vim networkmanager xorg sudo efibootmgr 文件编辑器vim或nano； 网络工具networkmanager，iwd,dhcpcd； 引导grub，sudo； 编辑启动项工具efibootmgr； 寻找其他操作系统os-prober； 2. 设置 Root 密码,创建日常用户： 1. 设置 root 密码： PS： UNIX系统在输入时不会显示密码 输入passwd(改密) 再输入自己要创建的密码，并且再输入一遍确认无误； 看见passud: password updated success fu lly显示成功 2. 创建日常用户（用户名不能大写）: 输入useradd -m -G wheel -s /bin/bash (用户名） 用passwd创建密码：passwd （用户名） 给日常用户提权： 输入 visudo；寻找%wheel ALL=(ALL)ALL行去掉#号注释； 可以末尾添加Defaults rootpw有问题直询问根用户（预选）\n3. 安装引导 安装grub引导： 输入uname -m确认cup架构\nBIOS+MBR输入这个指令安装引导：\ngrub-install /dev/sda grub-install --target=i386-pc /dev/sda 见到 Installation finished. No error reported. 表示安装完成 UEFI+MBR输入这个指令安装引导:\ngrub-install --target=(目标架构)-efi --efi-directory 创建一个存放系统引导的文件夹： mkdir /boot/grub (引导文件夹名字) 在文件夹下生成引导配置： grub-mkconfig -o /boot/grub/grub.cfg 4. 重启安装 输入exit或者ctrl+d退出chroot环境 手动卸载分区： umount -R /mnt 执行 reboot 重启系统 或shutdown now 重启后点击 Boot existing os 进入系统 ","date":"0001-01-01T00:00:00Z","permalink":"https://blog.gtlx.ltd/p/arch%E5%AE%89%E8%A3%85/","title":"arch安装"},{"content":" 详细刷机：[[红米k50刷机]] 机型代号网站 https://magiskcn.com/ 所需工具： pc端 秋之盒 小米线刷工具 解包工具 adb命令行工具 安卓端 scene5：安卓设备管理器 appops：权限管理工具 管理root的工具： magisk：面具 面具中文网 管理root后软件的工具： LSPosed模块：lsp框架（已停更） LSPosed_mod：新版LSP框架 备份字库 视频教程参考 备份 准备工作 设备获取root权限 在开发者模式中开启usb调试：adb shell 给予shell以root权限：su 开始备份 在设备sdcard目录中创建用于存储备份的目录： mkdir /sdcard/000_Backup 读取设备分区信息，屏蔽掉没有必要的userdata和缓存分区： 1 ls -1 /dev/block/bootdevice/by-name | grep -ixvE \u0026#34;userdata|cache\u0026#34; | while IFS= read -r name; do echo \u0026#34;dd if=/dev/block/bootdevice/by-name/$name of=/sdcard/000_Backup/$name.img\u0026#34; \u0026gt;\u0026gt; /sdcard/000_Backup/001_Backup.sh; echo \u0026#34;fastboot flash $name $name.img\u0026#34; \u0026gt;\u0026gt; /sdcard/000_Backup/002_Restore.bat; done 使用多出来的sh脚本进行备份（dat脚本用于还原） sh /sdcard/000_Backup/001_Backup.sh 找到persist.img分区并删除，dat脚本中的最好也删除 ps：刷入后可能损毁tee导致安全支付永久失效 创建MD5值的表格用于日后验证备份文件是否损毁 cd /sdcard/000_Backup \u0026amp;\u0026amp; md5sum * \u0026gt; /sdcard/000_Backup/003_MD5Hsah.txt 一些优化 剔除官方线刷包中已有的分区（也可以防止还原时可能出现的版本冲突）： 此行命令运行较快 1 sed -i -e \u0026#39;/ super.img/s/^/::/g\u0026#39; -e \u0026#39;/ system.img/s/^/::/g\u0026#39; -e \u0026#39;/ system_a.img/s/^/::/g\u0026#39; -e \u0026#39;/ system_b.img/s/^/::/g\u0026#39; -e \u0026#39;/ vendor.img/s/^/::/g\u0026#39; -e \u0026#39;/ vendor_a.img/s/^/::/g\u0026#39; -e \u0026#39;/ vendor_b.img/s/^/::/g\u0026#39; -e \u0026#39;/ mmcblk0.img/s/^/::/g\u0026#39; -e \u0026#39;/ sda.img/s/^/::/g\u0026#39; -e \u0026#39;/ sdb.img/s/^/::/g\u0026#39; -e \u0026#39;/ sdc.img/s/^/::/g\u0026#39; -e \u0026#39;/ sdd.img/s/^/::/g\u0026#39; -e \u0026#39;/ sde.img/s/^/::/g\u0026#39; -e \u0026#39;/ sdf.img/s/^/::/g\u0026#39; -e \u0026#39;/ sdg.img/s/^/::/g\u0026#39; /sdcard/000_Backup/002_Restore.bat 打包（打包过程很长耐心等待） cd /sdcard \u0026amp;\u0026amp; tar -zcpvf PartitionBackup.tgz 000_Backup 恢复 启动到fastboot模式，执行002_backup.bat 准备工作 1.备份数据 2. 解除BL锁 下载手机解锁工具 解锁（会清除手机数据） 等待七天 将手机关机，同时按下音量减和关机键进入FASTBOOT模式 插入数据线，点击设置更新驱动，确认解锁 3. 准备rom包 xiaomiROM 官网：小米官方rom整理 原下载加速方案 把下载地址中 bigota.d.miui.com 改成 bkt-sgp-miui-ota-update-alisgp.oss-ap-southeast-1.aliyuncs.com 下载加速方案：修改hosts文件 [[C3-01-02 系统通用#hosts文件修改]] LineageOS 官网 LineageOS卡刷方法 刷入boot分区：fastboot flash boot boot.img\n刷入dtbo分区：fastboot flash dtbo dtbo.img\n刷入vendor_boot分区：fastboot flash vendor_boot vendor_boot.img\n刷入recovery分区：fastboot flash recovery recovery.img\n重启进入recovery分区：fastboot reboot-recovery\n在设备上，选择“Apply Update”，然后选择“Apply from ADB”以开始旁加载。\n输入：adb -d sideload\nhttps://mirrors.tuna.tsinghua.edu.cn/help/lineageOS/\n小米9： LineageOS 19.1论坛 镜像下载地址 Redmi Note 12 Turbo：开机短接点 教程 miui14，安卓13线刷包 crdroid：无谷歌全家桶 通过第三方下载器如gopeed下载，可不限速。[[常用网址#^aea701]] paranoid android Lineage22：官网下载地址 下载地址 刷入教程： 开始刷机 Ps： 跨版本升级需要线刷底包。如安卓13要升级到15，需要线刷14的官方包，再卡刷到安卓15。 卡刷时，提示错误找不到分区路径/system_root，代表删除了System系统分区。此时只能通过线刷救砖安装系统后才能正常的安装第三方rec进行卡刷。(花费1天时间搞明白原因) 线刷 下载对应的线刷包 下载小米线刷工具 对线刷包进行俩次解压 打开线刷工具 安装驱动 选择解压后的线刷包 刷机（估计耗时1-10分钟） 卡刷 刷机前的格式化 双清，三清以及四清的区别 双清：选择Dalvik Cache、Cache。 双清只清除缓存，不清除系统和用户数据。双清一般用在相同系统版本进行ota升级时。 三清：选择Dalvik Cache、Cache、Data。 三清后刷机失败，是还可以进入系统的。此时的刷机失败指的是twrp再输入检查时会出现错误 四清：选择Dalvik Cache、Cache、Data、System。（一般不选） 四清是最完整的wipe，把系统、缓存、用户数据等全部清除，清除了之后如果刷机失败，会进不去系统。 第三方rec 下载对应机型设备代号的 twrp\nfastboot命令查看：[[C3-02-03 Android#^3bdf55]] TWRP：是一款第三方的刷机软件，主要作用包括刷机、备份，救砖等。\n官网：小米9可以直接官网下载 Redmi Note 12 Turbo（marble）： 下载地址 澎湃系统刷第三方rec需要先刷入recovery分区，再刷入原包的boot镜像，重启后才能进入rec 橙狐（OrangeFox）：\n官网 :可直接刷入recovery分区 注意事项 刷机后续 获取root权限 twrp修补法 下载面具 将面具后缀名apk改为zip 进入twrp刷入更改后的压缩包 boot修补法 下载adb命令行工具 解压，备用 下载Magisk（面具） Magisk中文网 开源地址 将面具复制到手机里，并且安装 解包：\n下载解包工具 解压完整包和解包工具（查看解压后的完整包是否有boot.img这个文件，如果没有再进行下一步） 将完整包payload.bin文件的放在解压包的payload_input文件夹里 将解包后的boot.img复制到手机里 开始刷入：\n打开面具，点击安装，选择选择并修补一个文件，选择手机里的boot.img文件进行修复 电脑打开手机内部存储设备，打开Download目录，将magisk_patched-24300_82wTg.img文件复制到adb命令行文件夹的根目录 将手机关机，按住音量下加开机键进入FASTBOOT模式 点击解压后的adb命令行工具中的打开CMD命令行.bat文件 输入以下命令：fastboot flash boot \u0026lt;修补后Download目录下的文件名\u0026gt; 见到Finished.说明刷入成功 输入fastboot reboot重启设备 安装LSPosed模块 打开面具，点击设置，找到magisk栏，开启zygisk(beta)选项 下载LSPosed模块：面具是24.1版本以上的下载带zygisk的 点击模块安装 更新系统 查询手机是否是ab分区 adb shell getprop ro.build.ab_update 更新 下载更新完整包，等待下载完成，不要重启更新 进入面具，点击magisk安装，安装到未使用的槽位(OAT后) 常用模块 能别装就别装，极简原则 救砖模块 LSPosed模块 内核的刷入 ","date":"0001-01-01T00:00:00Z","permalink":"https://blog.gtlx.ltd/p/%E5%AE%89%E5%8D%93%E5%88%B7%E6%9C%BA/","title":"安卓刷机"},{"content":"在npm上部署静态网站 参考教程 在npm新建静态网站挂载目录：mkdir /root/data/docker_data/npm/data/gtlx 登陆NPM，在网页里新建一个Proxy Host 在Advanced这一栏填入下面的配置： 1 2 3 location / { root /data/gtlx; } 修改成你自己刚刚创建的目录，只需要改gtlx这部分就可以了 手动部署 建立仓库 打开github，点击头像\u0026ndash;\u0026gt;Repositories(您的储存库)\u0026ndash;\u0026gt; New(新的) General： 在 Repository name 下输入：gtlx.github.io(gtlx为您的用户名) Description下可以填你的备注说明 (选填) Configuration： Choose visibility * ： 选择 pcblic(公开) 其他的默认，点击 Create repository 创建库 部署仓库密钥 打开github，点击头像\u0026ndash;\u0026gt;Settings（设置）\u0026ndash;\u0026gt;SSH and GPG keys\u0026ndash;\u0026gt;SSH keys 创建ssh密钥，详细操作见[[C3-02-01 linux通用操作#密钥生成]] 点击 New SSH key 添加生成的公钥 使用上传静态博客内容到GitHub 见[[git]] 一些优化 将GitHub的域名改为自己准备的域名 修改.github.io为自己的域名 在本地网站根目录创建一个名为CNAME的文件(不加后缀)或者直接通过Github项目主页Create new file按钮创建，然后文件内容为你的域名(可以是一级域名也可以是二级) 点击github.io主页，先找到Settings（设置）标签，再找到pages,在Custom domain下填入域名，点击Save保存即可 解析域名 创建CNAME指向.github.io（名称为www） 再创建 A (ipv4 ) 记录，请将 apex 域指向 GitHub Pages 的 IP 地址。（我的配置是四选一就好，具体如下图。） 185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153 如果要创建 AAAA (ipv6) 记录，请将 apex 域指向 GitHub Pages 的 IP 地址。（没试过） 2606:50c0:8000::153 2606:50c0:8001::153 2606:50c0:8002::153 2606:50c0:8003::153 ","date":"0001-01-01T00:00:00Z","permalink":"https://blog.gtlx.ltd/p/%E5%88%A9%E7%94%A8github%E4%B8%8A%E7%9A%84github-pages%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/","title":"利用github上的GitHub Pages部署静态网站："}]