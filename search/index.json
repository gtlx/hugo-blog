[{"content":"在npm上部署静态网站 参考教程 在npm新建静态网站挂载目录：mkdir /root/data/docker_data/npm/data/gtlx 登陆NPM，在网页里新建一个Proxy Host 在Advanced这一栏填入下面的配置： 1 2 3 location / { root /data/gtlx; } 修改成你自己刚刚创建的目录，只需要改gtlx这部分就可以了 手动部署 建立仓库 打开github，点击头像\u0026ndash;\u0026gt;Repositories(您的储存库)\u0026ndash;\u0026gt; New(新的) General： 在 Repository name 下输入：gtlx.github.io(gtlx为您的用户名) Description下可以填你的备注说明 (选填) Configuration： Choose visibility * ： 选择 pcblic(公开) 其他的默认，点击 Create repository 创建库 部署仓库密钥 打开github，点击头像\u0026ndash;\u0026gt;Settings（设置）\u0026ndash;\u0026gt;SSH and GPG keys\u0026ndash;\u0026gt;SSH keys 创建ssh密钥，详细操作见[[C3-02-01 linux通用操作#密钥生成]] 点击 New SSH key 添加生成的公钥 使用上传静态博客内容到GitHub 见[[git]] 一些优化 将GitHub的域名改为自己准备的域名 修改.github.io为自己的域名 在本地网站根目录创建一个名为CNAME的文件(不加后缀)或者直接通过Github项目主页Create new file按钮创建，然后文件内容为你的域名(可以是一级域名也可以是二级) 点击github.io主页，先找到Settings（设置）标签，再找到pages,在Custom domain下填入域名，点击Save保存即可 解析域名 创建CNAME指向.github.io（名称为www） 再创建 A (ipv4 ) 记录，请将 apex 域指向 GitHub Pages 的 IP 地址。（我的配置是四选一就好，具体如下图。） 185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153 如果要创建 AAAA (ipv6) 记录，请将 apex 域指向 GitHub Pages 的 IP 地址。（没试过） 2606:50c0:8000::153 2606:50c0:8001::153 2606:50c0:8002::153 2606:50c0:8003::153 ","date":"0001-01-01T00:00:00Z","permalink":"https://gtlx.github.io/hugo-blog/p/%E5%88%A9%E7%94%A8github%E4%B8%8A%E7%9A%84github-pages%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/","title":"利用github上的GitHub Pages部署静态网站："},{"content":"🤖 Assistant 要将 Manjaro 迁移到 Arch Linux，需要备份数据、安装 Arch 并恢复配置。以下是详细步骤：\n📌 迁移流程概览 备份重要数据（避免丢失） 准备 Arch 安装介质（USB 或网络安装） 安装 Arch Linux（手动或脚本辅助） 恢复配置文件和数据 优化系统设置 🔹 第一步：备份 Manjaro 数据 1. 备份个人文件（最关键的！） 重要目录： 1 cp -r ~/Documents ~/Pictures ~/Music ~/Videos /mnt/backup/ 或者使用 rsync（增量备份）： 1 rsync -avz --progress ~/ /mnt/backup/home/ 备份到外部硬盘或 NAS（推荐 ext4/NTFS 格式）。 2. 备份软件列表 导出已安装的软件包（方便 Arch 重新安装）： 1 2 pacman -Qqe \u0026gt; pkglist.txt # 所有显式安装的软件 pacman -Qq \u0026gt; pkglist-full.txt # 所有软件（包括依赖） 备份 AUR 软件（如 yay 安装的）： 1 yay -Qqe \u0026gt; aur-pkglist.txt 3. 备份系统配置 关键配置文件（复制到备份目录）： 1 2 3 mkdir ~/backup-config cp -r /etc/{pacman.conf,hosts,fstab,default/grub} ~/backup-config/ cp -r ~/.config/{i3,bspwm,alacritty,fish} ~/backup-config/ 浏览器数据（如 Firefox/Chrome）： 1 cp -r ~/.mozilla ~/.config/google-chrome ~/backup-config/ 4. 备份 GRUB 和 EFI（可选） 如果是 UEFI 系统，备份 EFI 分区： 1 2 sudo mount /dev/nvme0n1p1 /mnt/efi # 替换为你的 EFI 分区 cp -r /mnt/efi/EFI/manjaro /mnt/backup/EFI/ 🔹 第二步：安装 Arch Linux 1. 准备 Arch 安装介质 下载 Arch ISO： 1 wget https://archlinux.org/iso/latest/archlinux-x86_64.iso 写入 USB（替换 /dev/sdX）： 1 sudo dd bs=4M if=archlinux-x86_64.iso of=/dev/sdX status=progress oflag=sync 2. 启动 Arch 安装环境 从 USB 启动，进入 Live 环境。 联网： 1 2 3 iwctl station wlan0 connect SSID # WiFi dhcpcd # 有线网络 ping archlinux.org # 检查网络 3. 分区和格式化 查看磁盘： 1 lsblk 推荐分区方案：\n挂载点 分区类型 大小 文件系统 /boot/efi EFI 512MB fat32 / Linux ≥30GB ext4 /home Linux 剩余空间 ext4 swap swap ≥4GB swap 格式化（示例）：\n1 2 3 4 5 mkfs.fat -F32 /dev/nvme0n1p1 # EFI mkfs.ext4 /dev/nvme0n1p2 # / mkfs.ext4 /dev/nvme0n1p3 # /home mkswap /dev/nvme0n1p4 # swap swapon /dev/nvme0n1p4 4. 安装 Arch 挂载分区： 1 2 3 4 mount /dev/nvme0n1p2 /mnt mkdir /mnt/{boot,home} mount /dev/nvme0n1p1 /mnt/boot mount /dev/nvme0n1p3 /mnt/home 安装基础系统： 1 pacstrap /mnt base linux linux-firmware networkmanager nano 生成 fstab： 1 genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab 5. 进入新系统 \u0026amp; 完成安装 Chroot： 1 arch-chroot /mnt 设置时区、语言、主机名等： 1 2 3 4 5 6 ln -sf /usr/share/zoneinfo/Region/City /etc/localtime hwclock --systohc echo \u0026#34;en_US.UTF-8 UTF-8\u0026#34; \u0026gt;\u0026gt; /etc/locale.gen locale-gen echo \u0026#34;LANG=en_US.UTF-8\u0026#34; \u0026gt; /etc/locale.conf echo \u0026#34;myhostname\u0026#34; \u0026gt; /etc/hostname 安装 GRUB（UEFI）： 1 2 3 pacman -S grub efibootmgr grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB grub-mkconfig -o /boot/grub/grub.cfg 设置 root 密码： 1 passwd 🔹 第三步：恢复数据 1. 恢复个人文件 挂载备份盘： 1 mount /dev/sdb1 /mnt/backup # 替换为你的备份设备 复制文件： 1 cp -r /mnt/backup/home/* ~/ 2. 重新安装软件 从备份列表安装： 1 2 pacman -S - \u0026lt; pkglist.txt yay -S - \u0026lt; aur-pkglist.txt 3. 恢复配置文件 复制回 /etc 和 ~/.config： 1 2 sudo cp -r ~/backup-config/etc/* /etc/ cp -r ~/backup-config/.config/* ~/.config/ 🔹 最后优化 检查引导： 1 sudo update-grub 启用 NetworkManager： 1 systemctl enable NetworkManager 安装桌面环境（可选）： 1 pacman -S xorg gnome # 或 kde, i3, sway, etc. 📢 注意事项 ⚠️ 数据安全第一！ 确保备份无误后再操作。 🔧 驱动问题：Arch 默认不包含专有驱动（如 NVIDIA），需手动安装： 1 pacman -S nvidia nvidia-utils 🔄 AUR 软件：可能需要重新编译（如 yay -S pkgname）。 🎉 完成！ 现在你拥有了一个原生的 Arch Linux，并恢复了 Manjaro 的配置和数据。🎯 如果遇到问题，可以参考：\nArch Wiki Arch 安装指南 希望顺利迁移！🚀\n","date":"0001-01-01T00:00:00Z","permalink":"https://gtlx.github.io/hugo-blog/p/%E5%A6%82%E4%BD%95%E5%B0%86manjaro%E7%B3%BB%E7%BB%9F%E8%BF%81%E7%A7%BB%E5%88%B0arch%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E5%A4%87%E4%BB%BD%E5%92%8C%E4%BF%9D%E5%AD%98/","title":"如何将manjaro系统迁移到arch，如何进行备份和保存"}]